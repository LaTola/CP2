---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ ak8s_app }}
  labels:
    name: {{ ak8s_app }}

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: sc-pihole
  namespace: pihole
provisioner: file.csi.azure.com/azurefile-csi
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
parameters:
  skuName: Premium_ZRS
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pv-dnsmasq
#   namespace: pihole
# spec:
#   storageClassName: azurefile-premium
#   accessModes:
#     - ReadWriteMany
#   capacity:
#     storage: 1Gi
#   mountOptions:
#     - dir_mode=0777
#     - file_mode=0777
#   azureFile:
#     secretName: azure-secret
#     secretNamespace: {{ ak8s_app }}
#     shareName: pv-dnsmasq
#     readOnly: false
#   hostPath:
#     path: /etc/dnsmasq.d

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pv-etc
#   namespace: pihole
# spec:
#   storageClassName: azurefile-premium
#   accessModes:
#     - ReadWriteMany
#   capacity:
#     storage: 1Gi
#   mountOptions:
#     - dir_mode=0777
#     - file_mode=0777
#   azureFile:
#     secretName: azure-secret
#     secretNamespace: {{ ak8s_app }}
#     shareName: pv-etc
#     readOnly: false
#   hostPath:
#     path: /etc/pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-dnsmasq
  namespace: pihole
spec:
  storageClassName: sc-pihole
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  #volumeName: pv-dnsmasq

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-etc
  namespace: pihole
spec:
  storageClassName: sc-pihole
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  #volumeName: pv-etc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ ak8s_app }}
  namespace: {{ ak8s_app }}
  labels:
    app: {{ ak8s_app }}
spec:
  replicas: 4
  selector:
    matchLabels:
      app: {{ ak8s_app }}
  template:
    metadata:
      labels:
        app: {{ ak8s_app }}
        name: {{ ak8s_app }}
    spec:
      containers:
        - name: {{ ak8s_app }}
          image: {{ ak8s_app_registry }}
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "America/Montevideo"
            - name: WEBPASSWORD
              value: {{ ak8s_web_admin_password }}
          volumeMounts:
            - name: dnsmasq-volume
              mountPath: /etc/dnsmasq.d
            # - name: etc-volume
            #   mountPath: /etc/pihole
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "pihole -up"]
      volumes:
        - name: dnsmasq-volume
          # secret: 
          #   secretName: azure-secret
          persistentVolumeClaim:
            claimName: pvc-dnsmasq
      #   - name: etc-volume
      #     secret:
      #       secretName: azure-secret
      #     persistentVolumeClaim:
      #       claimName: pvc-etc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ ak8s_app }}
  namespace: pihole
spec:
  selector:
    app: {{ ak8s_app }}
  ports:
    - port: 80
      targetPort: 80
      name: pihole-admin
    - port: 53
      targetPort: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      targetPort: 53
      protocol: UDP
      name: dns-udp
  sessionAffinity: ClientIP
  type: LoadBalancer
