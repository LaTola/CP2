---
- name: Login a ACR
  containers.podman.podman_login:
    username: "{{ acrcp2_user }}"
    password: "{{ acrcp2_pwd }}"
    registry: "{{ acrcp2_url }}"
  become: true
  become_user: root
  become_method: sudo

- name: Podman Containerfile template
  ansible.builtin.template:
    src: "vm_containerfile.j2"
    dest: "{{ base_config_dir }}/Containerfile"

- name: Creacion de la imagen web de podman
  containers.podman.podman_image:
    name: "{{ web_name }}"
    path: "{{ base_config_dir }}"
    push: true
    push_args:
      dest: "{{ acrcp2_url }}"
      remove_signatures: true
  become: true
  become_user: root
  become_method: sudo

- name: Ejecucion
  containers.podman.podman_container:
    name: "{{ web_name }}"
    image: "{{ acrcp2_url }}/{{ web_name }}"
    recreate: yes
    ports:
      - "443:443/tcp"
    state: started
  become: true
  become_user: root
  become_method: sudo
  register: container

- name: Unit file para el webserver
  containers.podman.podman_generate_systemd:
    name: "{{ container.container.Id }}"
    dest: "{{ systemd_unit_path }}"
  become: true
  become_user: root
  become_method: sudo

- name: Contenedor configurado e iniciado
  systemd:
    name: "container-{{ web_name }}"
    daemon_reload: yes
    state: started
    enabled: yes
  become: true
  become_user: root
  become_method: sudo

- name: Podman Containerfile template
  ansible.builtin.template:
    src: "k8s_containerfile.j2"
    dest: "{{ base_config_dir }}/{{ k8s_dir }}/Containerfile"

- name: Creacion de la imagen web de k8s
  containers.podman.podman_image:
    name: "{{ ak8s_app_name }}"
    path: "{{ base_config_dir }}/{{ k8s_dir }}"
    build:
      cache: no
      force_rm: yes
    push: true
    push_args:
      dest: "{{ acrcp2_url }}"
  become: true
  become_user: root
  become_method: sudo

